# Python code for the Grade
# Calculator program in action

# Creating a dictionary which
# consists of the student name,
# assignment result test results
# and their respective lab results

import pprint
# 1. Jack's dictionary
jack = { "name":"Jack Frost",
		"assignment" : [80, 50, 40, 20],
		"test" : [75, 75],
		"lab" : [78.20, 77.20]
	}
		
# 2. James's dictionary
james = { "name":"James Potter",
		"assignment" : [82, 56, 44, 30],
		"test" : [80, 80],
		"lab" : [67.90, 78.72]
		}

# 3. Dylan's dictionary
dylan = { "name" : "Dylan Rhodes",
		"assignment" : [77, 82, 23, 39],
		"test" : [78, 77],
		"lab" : [80, 80]
		}
		
# 4. Jessica's dictionary
jess = { "name" : "Jessica Stone",
		"assignment" : [67, 55, 77, 21],
		"test" : [40, 50],
		"lab" : [69, 44.56]
	}
		
# 5. Tom's dictionary
tom = { "name" : "Tom Hanks",
		"assignment" : [29, 89, 60, 56],
		"test" : [65, 56],
		"lab" : [50, 40.6]
	}

list_data = []
list_dict_names = [tom, jess, dylan, james, jack]
for i in list_dict_names:
  list_data.append(i)

def average_score_list (list_of_scores):
  sum = 0.00
  for i in range(0, len(list_of_scores)):
    sum += list_of_scores[i]
  return sum/len(list_of_scores)
    
def grading_func (dict_one_student):

  final_score = []
  avg_assignment_score = average_score_list (dict_one_student['assignment'])
  avg_test_score = average_score_list(dict_one_student['test'])
  avg_lab_score = average_score_list(dict_one_student['lab'])
  grade_one_student = 0.1 * avg_assignment_score + 0.7*avg_test_score + 0.2* avg_lab_score

  if grade_one_student >= 90 and grade_one_student < 100:
    grade_in_letters = 'A'
  elif grade_one_student >= 80 and grade_one_student < 90:
    grade_in_letters = 'B'
  elif grade_one_student >= 70 and grade_one_student < 80:
    grade_in_letters = 'C'
  elif grade_one_student >= 60 and grade_one_student < 70:
    grade_in_letters = 'D'
  else:
    grade_in_letters = 'Need grace marks before grading you have '+ str(grade_one_student)
    

  final_score.append(dict_one_student['name'] )
  final_score.append(grade_in_letters)

  return final_score


  


final_result_main = { }
for one_stud_dict_main in list_data:

  grade_for_one = grading_func(one_stud_dict_main)
  final_result_main[grade_for_one[0]] = grade_for_one[1]

pprint.pprint(final_result_main)
  
